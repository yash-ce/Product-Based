// java working
// User function Template for Java

class Solution {

    int search(String pat, String txt) {
        // code here
        int cnt = 0;
     int k = pat.length();
     int n = txt.length();
     HashMap<Character,Integer> pmap =new HashMap<>();
     HashMap<Character,Integer> smap = new HashMap<>();
     
     for(char ch:pat.toCharArray()) {
         pmap.put(ch,pmap.getOrDefault(ch,0)+1);
     }
     
     int i=0;
     int j=0;
     while( j < n){
         char chj = txt.charAt(j);
         smap.put(chj,smap.getOrDefault(chj,0)+1);
         
         if(j - i + 1 < k) j++;
         else if(j - i + 1 == k){
             if(pmap.equals(smap)) cnt++;
             char chi = txt.charAt(i);
             smap.put(chi , smap.get(chi)-1);
             if(smap.get(chi) == 0) smap.remove(chi);
             i++;
             j++;
         }
     }
     return cnt;
    }
}

// c++ optimization needed

class Solution{
public:
	int search(string pat, string txt) {
	    // code here
	    int i=0;
	    int j =0;
	    int c =0;
	    int k = pat.size();
	    int a[256];
	    for(int i=0;i<256;i++){
	        a[i] = 0;
	    }
	    while(j < txt.size()){
	        a[txt[j]]++;
	        if(j-i+1 < k){
	            j++;
	        }
	        else if(j-i+1 == k){
	            bool flag = true;
	            for(int l=0;l<pat.size();l++){
	                a[pat[l]]--;
	            }
	            for(int l=0;l<256;l++){
	                if(a[l] != 0){
	                    flag = false;
	                    break;
	                }
	            }
	            for(int i=0;i<256;i++){
	                a[i] = 0;
	            }
	            for(int l=i+1;l<=j;l++){
	                a[txt[l]]++;
	            }
	            if(flag){
	                c++;
	            }
	           // a[txt[i]]--;
	            i++;
	            j++;
	        }
	    }
	    return c;
	}

};
